statement ok
set max_block_size = 1;

# https://github.com/datafuselabs/databend/pull/10140
query I
select count(*) from numbers(10000) as t1 inner join numbers(10000) as t2 on t1.number = t2.number
----
10000

# take block vec fast path
statement ok
drop table if exists t1;

statement ok
create table t1(a int, b int)

statement ok
insert into t1 values(1, NULL), (2, 4), (3, NULL)

statement ok
drop table if exists t2

statement ok
create table t2(a int, b int)

statement ok
insert into t2 values(1, 2), (1, 4), (2, 6), (2, 8), (3, 10);

query I
select * from t1 left join t2 on t1.a = t2.a order by t2.b, t1.b;
----
1 NULL 1 2
1 NULL 1 4
2 4 2 6
2 4 2 8
3 NULL 3 10

statement ok
drop table if exists onecolumn

statement ok
CREATE TABLE onecolumn (x INT NULL)

statement ok
INSERT INTO onecolumn(x) VALUES (44), (NULL), (42)

statement ok
drop table if exists empty

statement ok
CREATE TABLE empty (x INT)

statement ok
SELECT * FROM onecolumn AS a(x) CROSS JOIN empty AS b(y)

statement ok
drop table onecolumn

statement ok
drop table empty

# INNER JOIN
statement ok
use default

statement ok
drop table if exists t1

statement ok
create table t1(a int, b int)

statement ok
insert into t1 values(7, 8), (3, 4), (5, 6)

statement ok
drop table if exists t2

statement ok
create table t2(a int, d int)

statement ok
insert into t2 values(1, 2), (3, 4), (5, 6)

query III
select * from t1 join t2 using(a) order by t1.a, t2.a
----
3 4 4
5 6 6

query I
select t1.a from t1 join t2 using(a) order by t1.a, t2.a
----
3
5

query II
select t1.a, t2.a from t1 join t2 using(a) order by t1.a, t2.a
----
3 3
5 5

query I
select a from t1 join t2 using(a) order by t1.a, t2.a
----
3
5

query I
select t2.d from t1 join t2 using(a) order by t1.a, t2.a
----
4
6

query I
select a from (select number as a from numbers(3)) n join (select number as a from numbers(4)) nn using (a) order by a
----
0
1
2

query III
select * from t1 natural join t2 order by t1.a, t2.a
----
3 4 4
5 6 6

statement ok
drop table t1

statement ok
drop table t2

statement ok
create table t1(a int, b int)

statement ok
insert into t1 values(1, 2), (1, 3), (2, 4)

statement ok
create table t2(c int, d int)

statement ok
insert into t2 values(1, 2), (2, 6)

query IIII
select * from t2 inner join t1 on t1.a = t2.c order by a, b, c, d
----
1 2 1 2
1 2 1 3
2 6 2 4

statement ok
drop table if exists t1_null

statement ok
drop table if exists t2_null

statement ok
create table t1_null(a int null , b int null)

statement ok
create table t2_null(a int null , b int null)

statement ok
insert into t1_null values(1, 2), (2, 3), (null, 1)

statement ok
insert into t2_null values(3, 4), (2, 3), (null, 2)

query IIII
select * from t1_null inner join t2_null on t1_null.a = t2_null.a
----
2 3 2 3

query II
select * from numbers(10) x join (select 1::UInt64 number) y on x.number = y.number
----
1 1

query III
select a.number, pt,register_at from ( select number,  to_yyyymmdd(to_timestamp(number))   as pt
	from numbers(10) where number > 5
) a join ( select distinct number , to_yyyymmdd(to_timestamp(number)) as  register_at from numbers(10) where number > 5
) b on  a.number=b.number order by a.number;
----
6 19700101 19700101
7 19700101 19700101
8 19700101 19700101
9 19700101 19700101

statement ok
drop table if exists t1;

statement ok
create table t1 (a int);

# right join with empty build side
query II
select * from (select * from numbers(100)) n right join t1 on n.number = t1.a;
----

# inner join with empty build side
query II
select * from (select * from numbers(100)) n join t1 on n.number = t1.a;
----

# right semi with empty build side
query II
select * from (select * from numbers(100)) n right semi join t1 on n.number = t1.a;
----

# right anti with empty build side
query II
select * from (select * from numbers(100)) n right anti join t1 on n.number = t1.a;
----

# left semi with empty build side
query II
select * from (select * from numbers(100)) n left semi join t1 on n.number = t1.a;
----

# left anti join with empty build side
query I
select * from (select * from numbers(10)) n left anti join t1 on n.number = t1.a order by number;
----
0
1
2
3
4
5
6
7
8
9


# left join with empty build side
query II
select * from (select * from numbers(10)) n left join t1 on n.number = t1.a order by n.number;
----
0 NULL
1 NULL
2 NULL
3 NULL
4 NULL
5 NULL
6 NULL
7 NULL
8 NULL
9 NULL

# full join with empty build side
query II
select * from (select * from numbers(10)) n full join t1 on n.number = t1.a order by n.number;
----
0 NULL
1 NULL
2 NULL
3 NULL
4 NULL
5 NULL
6 NULL
7 NULL
8 NULL
9 NULL

statement ok
drop table t1;

statement ok
drop table if exists t1;

statement ok
create table t1(a int, b int)

statement ok
insert into t1 values(1, 2), (2, 4), (3, 6), (4, 8), (5, 10)

statement ok
drop table if exists t2

statement ok
create table t2(a int, b int)

statement ok
insert into t2 values(1, 2), (1, 4), (1, 6), (1, 8), (1, 10);

# test probe to build
statement ok
insert into t1 values(2, 2);

statement ok
insert into t2 values(2, 6), (2, 8);

query I
select t1.a, t2.b, t1.b from t1 inner join t2 on t1.a = t2.a order by t1.a, t2.b, t1.b;
----
1 2 2
1 4 2
1 6 2
1 8 2
1 10 2
2 6 2
2 6 4
2 8 2
2 8 4

# test probe to build with other condition
statement ok
drop table if exists t1;

statement ok
drop table if exists t2;

statement ok
create table t1 (id int, val bigint unsigned default 0);

statement ok
create table t2 (id int, val bigint unsigned default 0);

statement ok
insert into t1 values(1, 1696549154011), (2, 1696549154013);

statement ok
insert into t2 values(1, 1697650260000), (3, 1696549154009), (2, 1696549154010), (2, 1696549154013);

query I
select t1.id from t1 left join t2 on t1.id = t2.id where t1.val >= t2.val;
----
2
2

query I
select t1.id, t1.val from t1 left join t2 on t1.id = t2.id and t1.val = t2.val where t1.val >= t2.val;
----
2 1696549154013

statement ok
drop table t1;

statement ok
drop table t2;

statement ok
create table t(id int);

statement ok
insert into t values(1), (2);

statement ok
create table t1(id int, col1 varchar);

statement ok
insert into t1 values(1, 'c'), (3, 'd');

query I rowsort
SELECT * FROM t JOIN t1, t as t2 JOIN t1 as t3;
----
1 1 c 1 1 c
1 1 c 1 3 d
1 1 c 2 1 c
1 1 c 2 3 d
1 3 d 1 1 c
1 3 d 1 3 d
1 3 d 2 1 c
1 3 d 2 3 d
2 1 c 1 1 c
2 1 c 1 3 d
2 1 c 2 1 c
2 1 c 2 3 d
2 3 d 1 1 c
2 3 d 1 3 d
2 3 d 2 1 c
2 3 d 2 3 d

statement ok
drop table t;

statement ok
drop table t1;

# LEFT JOIN
statement ok
drop table if exists t1

statement ok
drop table if exists t2

statement ok
create table t1(a int, b int)

statement ok
create table t2(c int, d int)

statement ok
insert into t1 values(1, 2), (3 ,4), (7, 8)

statement ok
insert into t2 values(1, 4), (2, 3), (6, 8)

query IIII
select * from t1 right join t2 on t1.a = t2.c order by t2.c
----
1 2 1 4
NULL NULL 2 3
NULL NULL 6 8

query IIII
select * from t1 right join t2 on t1.a > t2.c order by t1.a, t1.b, t2.c, t2.d
----
3 4 1 4
3 4 2 3
7 8 1 4
7 8 2 3
7 8 6 8

query IIII
select * from t1 left join t2 on t1.a = t2.c order by t2.c, t1.a
----
1 2 1 4
3 4 NULL NULL
7 8 NULL NULL


query IIII
select * from t1 left outer join t2 on t1.a = t2.c and t1.a > 3 order by a,b,c,d
----
1 2 NULL NULL
3 4 NULL NULL
7 8 NULL NULL

query IIII
select * from t1 left outer join t2 on t1.a = t2.c and t2.c > 4 order by a,b,c,d
----
1 2 NULL NULL
3 4 NULL NULL
7 8 NULL NULL

query IIII
select * from t1 left outer join t2 on t2.c > 4 and t1.a > 3 order by a,b,c,d
----
1 2 NULL NULL
3 4 NULL NULL
7 8 6 8

query IIII
select * from t1 left outer join t2 on t1.a > 3 order by a,b,c,d
----
1 2 NULL NULL
3 4 NULL NULL
7 8 1 4
7 8 2 3
7 8 6 8

query IIII
select * from t1 left outer join t2 on t2.c > 4 order by a,b,c,d
----
1 2 6 8
3 4 6 8
7 8 6 8

query IIII
select * from t1 left outer join t2 on t1.a > t2.c order by a,b,c,d
----
1 2 NULL NULL
3 4 1 4
3 4 2 3
7 8 1 4
7 8 2 3
7 8 6 8

query III
select t1.a, t2.c, t2.d from t1 left join t2 on t2.c in ( -t2.c );
----
1 NULL NULL
3 NULL NULL
7 NULL NULL

statement ok
drop table if exists t3

statement ok
CREATE TABLE t3(c0 BIGINT NULL, c1 DOUBLE NULL)

statement ok
drop table if exists t4

statement ok
CREATE TABLE t4(c0 FLOAT NULL)

query I
SELECT SUM(count) FROM (SELECT ((false IS NOT NULL AND false) ::INT64)as count FROM t4 NATURAL LEFT JOIN t3) as res
----
NULL

statement ok
drop table if exists z0

statement ok
drop table if exists z1

statement ok
CREATE TABLE z0(c0BOOLEAN BOOLEAN NULL, c1FLOAT DOUBLE NULL)

statement ok
CREATE TABLE z1(c0BOOLEAN BOOL NULL DEFAULT(true))

statement ok
INSERT INTO z0(c1float, c0boolean) VALUES (0.27563244104385376, false), (0.7913353443145752, false)

statement ok
select * from z1 right join z0 on false limit 0

statement ok
drop table z0

statement ok
drop table z1

statement ok
drop table if exists t0;

statement ok
drop table if exists t1;

statement ok
drop table if exists t2;

statement ok
CREATE TABLE t0(c0BOOLEAN BOOLEAN NULL DEFAULT(false));

statement ok
CREATE TABLE t1(c0BOOLEAN BOOL NULL, c1FLOAT FLOAT NOT NULL DEFAULT(0.4661566913127899));

statement ok
CREATE TABLE t2(c0VARCHAR VARCHAR NULL, c1FLOAT DOUBLE NULL DEFAULT(0.954969048500061), c2VARCHAR VARCHAR NULL);

statement ok
INSERT INTO t0(c0boolean) VALUES (false), (true);

statement ok
INSERT INTO t0(c0boolean) VALUES (false), (false), (true);

statement ok
INSERT INTO t1(c1float) VALUES (0.43919482827186584);

statement ok
INSERT INTO t1(c1float) VALUES (0.2492278516292572);

statement ok
INSERT INTO t2(c1float) VALUES (0.9702655076980591);

statement ok
INSERT INTO t2(c1float, c2varchar) VALUES (0.5340723991394043, '02'), (0.4661566913127899, '1261837');

query IIR
SELECT t0.c0boolean, t1.c0boolean, t1.c1float FROM t0, t1 RIGHT JOIN t2 ON t1.c0boolean order by t0.c0boolean;
----
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
1 NULL NULL
1 NULL NULL
1 NULL NULL
1 NULL NULL
1 NULL NULL
1 NULL NULL

statement ok
drop table t0;

statement ok
drop table t1;

statement ok
drop table t2;

statement ok
drop table if exists t1;

statement ok
create table t1(a int, b int)

statement ok
insert into t1 values(1, 2), (2, 4), (3, 6), (4, 8), (5, 10)

statement ok
drop table if exists t2

statement ok
create table t2(a int, b int)

statement ok
insert into t2 values(1, 2), (1, 4), (1, 6), (1, 8), (1, 10);

query I
select * from t1 left join t2 on t1.a = t2.a order by t2.b, t1.b;
----
1 2 1 2
1 2 1 4
1 2 1 6
1 2 1 8
1 2 1 10
2 4 NULL NULL
3 6 NULL NULL
4 8 NULL NULL
5 10 NULL NULL

# left join with conjunct
query II
select * from t1 left join t2 on t1.a = t2.a and t1.b > t2.b order by t1.a, t2.a
----
1 2 NULL NULL
2 4 NULL NULL
3 6 NULL NULL
4 8 NULL NULL
5 10 NULL NULL

# push down false outer join
statement ok
drop table if exists t1;

statement ok
drop table if exists t2;

statement ok
CREATE TABLE t1(i int, j int);

statement ok
CREATE TABLE t2(k int, l int);

statement ok
INSERT INTO t1 VALUES (1, 2), (2, 3), (3, 4);

statement ok
INSERT INTO t2 VALUES (1, 10), (2, 20);

query I
SELECT * FROM t1 LEFT OUTER JOIN t2 ON TRUE AND t1.i=t2.k AND FALSE order by i, j;
----
1 2	NULL NULL
2 3	NULL NULL
3 4 NULL NULL

# RIGHT OUTER JOIN
statement ok
drop table if exists t1_null

statement ok
drop table if exists t2_null

query I
select * from (SELECT number AS a FROM numbers(10)) x left join (SELECT number AS a FROM numbers(5))  y using(a) order by x.a
----
0
1
2
3
4
5
6
7
8
9

query I
select * from (SELECT number AS a FROM numbers(10)) x right join (SELECT number AS a FROM numbers(5))  y using(a) order by x.a
----
0
1
2
3
4

query II
select * from (SELECT number AS a FROM numbers(1000)) x right join (SELECT number AS a FROM numbers(5))  y on x.a = y.a order by x.a
----
0 0
1 1
2 2
3 3
4 4

statement ok
drop table if exists t1;

statement ok
drop table if exists t2;

statement ok
create table t1(a int null);

statement ok
insert into t1 values(1), (NULL), (2);

statement ok
create table t2(b int null);

statement ok
insert into t2 values(1), (NULL), (3);

query I
select * from t1 join t2 on t1.a < t2.b order by t1.a;
----
1 3
2 3

statement ok
drop table t1;

statement ok
drop table t2;

statement ok
set max_block_size = 65536;
